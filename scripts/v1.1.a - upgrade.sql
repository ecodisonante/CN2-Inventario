-- =========================================================
-- Sistema Inventario - Oracle
-- Esquema de base de datos
--
-- IMPORTANTE:  Ejecutar este script solo si se esta actualizando
--              o creando una nueva base de datos.
--
-- v1.1
-- a. Actualización del esquema para gestión de órdenes, stock y reservas
-- =========================================================

-- Hacer que el campo WAREHOUSE_ID en PRODUCTS acepte NULL (opcional)
-- Esto permite tener productos que no estén asignados a ninguna bodega de manera temporal.
ALTER TABLE PRODUCTS MODIFY (WAREHOUSE_ID NULL);


-- Estados de la Orden
CREATE TABLE ORDER_STATUS (
  ID          NUMBER PRIMARY KEY,
  CODE        VARCHAR2(30) UNIQUE NOT NULL,  -- DRAFT, CONFIRMED, ALLOCATED, SHIPPED, CLOSED, CANCELED
  DESCRIPTION VARCHAR2(120)
);


-- Tipos de Orden (ventas, compras, transfer interna)
CREATE TABLE ORDER_TYPE (
  ID          NUMBER PRIMARY KEY,
  CODE        VARCHAR2(30) UNIQUE NOT NULL,  -- SALES, PURCHASE, TRANSFER
  DESCRIPTION VARCHAR2(120)
);


-- Estados de la Línea de Orden
CREATE TABLE ORDER_LINE_STATUS (
  ID          NUMBER PRIMARY KEY,
  CODE        VARCHAR2(30) UNIQUE NOT NULL,  -- PENDING, RESERVED, SHIPPED, BACKORDER, CANCELED
  DESCRIPTION VARCHAR2(120)
);


-- Estados de la Reserva
CREATE TABLE RESERVATION_STATUS (
  ID          NUMBER PRIMARY KEY,
  CODE        VARCHAR2(30) UNIQUE NOT NULL,  -- OPEN, CONSUMED, CANCELED, EXPIRED
  DESCRIPTION VARCHAR2(120)
);


-- Tipos de Movimiento de Stock (para auditoría)
CREATE TABLE MOVEMENT_TYPE (
  ID          NUMBER PRIMARY KEY,
  CODE        VARCHAR2(30) UNIQUE NOT NULL,  -- RECEIVE, SHIP, ADJUST, TRANSFER_OUT, TRANSFER_IN
  DESCRIPTION VARCHAR2(120)
);



-------------------------------------------------------------------
-------------------------------------------------------------------


-- Tabla para gestionar el stock de productos en cada bodega
CREATE TABLE STOCKS (
  PRODUCT_ID   NUMBER       NOT NULL,
  WAREHOUSE_ID NUMBER       NOT NULL,
  ON_HAND      NUMBER(12)   DEFAULT 0 CHECK (ON_HAND >= 0),
  RESERVED     NUMBER(12)   DEFAULT 0 CHECK (RESERVED >= 0),
  UPDATED_AT   TIMESTAMP(6) DEFAULT SYSTIMESTAMP NOT NULL,
  CONSTRAINT PK_STOCKS PRIMARY KEY (PRODUCT_ID, WAREHOUSE_ID),
  CONSTRAINT FK_STOCKS_PRODUCT   FOREIGN KEY (PRODUCT_ID)   REFERENCES PRODUCTS(ID),
  CONSTRAINT FK_STOCKS_WAREHOUSE FOREIGN KEY (WAREHOUSE_ID) REFERENCES WAREHOUSES(ID)
);

-- Columna virtual para calcular el stock disponible
ALTER TABLE STOCKS ADD (AVAILABLE NUMBER(12) GENERATED ALWAYS AS (ON_HAND - RESERVED) VIRTUAL);

CREATE INDEX IX_STOCKS_WH ON STOCKS (WAREHOUSE_ID, PRODUCT_ID);
CREATE INDEX IX_STOCKS_AVAILABLE ON STOCKS (AVAILABLE);


-- Tabla para registrar movimientos de stock
CREATE TABLE ORDERS (
  ID                NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  ORDER_TYPE_ID     NUMBER NOT NULL,
  STATUS_ID         NUMBER NOT NULL,
  CUSTOMER_REF      VARCHAR2(60),
  REQUESTED_AT      TIMESTAMP(6),         -- cuando el cliente la solicita
  PROMISED_AT       TIMESTAMP(6),         -- para cuando se solicita completar
  COMPLETED_AT      TIMESTAMP(6),         -- cuando se completa realmente
  CANCELED_AT       TIMESTAMP(6),         -- cuando se anula
  CREATED_AT        TIMESTAMP(6) DEFAULT SYSTIMESTAMP NOT NULL,
  UPDATED_AT        TIMESTAMP(6),

  CONSTRAINT FK_ORD_TYPE   FOREIGN KEY (ORDER_TYPE_ID) REFERENCES ORDER_TYPE(ID),
  CONSTRAINT FK_ORD_STATUS FOREIGN KEY (STATUS_ID)     REFERENCES ORDER_STATUS(ID)
);


-- Detalle de las órdenes
CREATE TABLE ORDER_LINES (
  ID             NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  ORDER_ID       NUMBER NOT NULL,
  PRODUCT_ID     NUMBER NOT NULL,
  QTY            NUMBER(12) NOT NULL CHECK (QTY > 0),
  STATUS_ID      NUMBER NOT NULL, -- FK a ORDER_LINE_STATUS
  NOTE           VARCHAR2(200),
  CREATED_AT     TIMESTAMP(6) DEFAULT SYSTIMESTAMP NOT NULL,
  UPDATED_AT     TIMESTAMP(6),

  CONSTRAINT FK_OL_ORDER   FOREIGN KEY (ORDER_ID)   REFERENCES ORDERS(ID),
  CONSTRAINT FK_OL_PRODUCT FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCTS(ID),
  CONSTRAINT FK_OL_STATUS  FOREIGN KEY (STATUS_ID)  REFERENCES ORDER_LINE_STATUS(ID)
);

CREATE INDEX IX_OL_ORDER ON ORDER_LINES (ORDER_ID);


-- Tabla para gestionar reservas de stock para órdenes
CREATE TABLE RESERVATIONS (
  ID            NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  ORDER_ID      NUMBER    NOT NULL,
  ORDER_LINE_ID NUMBER    NOT NULL,
  PRODUCT_ID    NUMBER    NOT NULL,
  WAREHOUSE_ID  NUMBER    NOT NULL,
  QTY           NUMBER(12) NOT NULL CHECK (QTY > 0),
  STATUS_ID     NUMBER    NOT NULL, -- FK a RESERVATION_STATUS
  EXPIRES_AT    TIMESTAMP(6),
  CREATED_AT    TIMESTAMP(6) DEFAULT SYSTIMESTAMP NOT NULL,

  CONSTRAINT FK_RS_ORDER   FOREIGN KEY (ORDER_ID)      REFERENCES ORDERS(ID),
  CONSTRAINT FK_RS_OL      FOREIGN KEY (ORDER_LINE_ID) REFERENCES ORDER_LINES(ID),
  CONSTRAINT FK_RS_PRODUCT FOREIGN KEY (PRODUCT_ID)    REFERENCES PRODUCTS(ID),
  CONSTRAINT FK_RS_WH      FOREIGN KEY (WAREHOUSE_ID)  REFERENCES WAREHOUSES(ID),
  CONSTRAINT FK_RS_STATUS  FOREIGN KEY (STATUS_ID)     REFERENCES RESERVATION_STATUS(ID)
);

CREATE INDEX IX_RS_ORDER      ON RESERVATIONS (ORDER_ID);
CREATE INDEX IX_RS_PRODUCT_WH ON RESERVATIONS (PRODUCT_ID, WAREHOUSE_ID);



-- Tabla para registrar movimientos de stock (auditoría)
CREATE TABLE STOCK_MOVEMENTS (
  ID            NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  PRODUCT_ID    NUMBER      NOT NULL,
  WAREHOUSE_ID  NUMBER      NOT NULL,
  MOV_TYPE_ID   NUMBER      NOT NULL,
  QTY           NUMBER(12)  NOT NULL CHECK (QTY <> 0),
  REFERENCE     VARCHAR2(120),
  ORDER_ID      NUMBER,
  ORDER_LINE_ID NUMBER,
  CREATED_AT    TIMESTAMP(6) DEFAULT SYSTIMESTAMP NOT NULL,

  CONSTRAINT FK_SM_PRODUCT FOREIGN KEY (PRODUCT_ID)   REFERENCES PRODUCTS(ID),
  CONSTRAINT FK_SM_WH      FOREIGN KEY (WAREHOUSE_ID) REFERENCES WAREHOUSES(ID),
  CONSTRAINT FK_SM_ORD     FOREIGN KEY (ORDER_ID)     REFERENCES ORDERS(ID),
  CONSTRAINT FK_SM_OL      FOREIGN KEY (ORDER_LINE_ID)REFERENCES ORDER_LINES(ID),
  CONSTRAINT FK_SM_TYPE    FOREIGN KEY (MOV_TYPE_ID)  REFERENCES MOVEMENT_TYPE(ID)
);

CREATE INDEX IX_SM_WH ON STOCK_MOVEMENTS (WAREHOUSE_ID, PRODUCT_ID, MOV_TYPE_ID);


